/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.code.completion.custom;

import java.util.prefs.Preferences;
import javax.swing.JFileChooser;

final class CustomCodeCompletionPanel extends javax.swing.JPanel {

	private final CustomCodeCompletionOptionsPanelController controller;

	CustomCodeCompletionPanel(CustomCodeCompletionOptionsPanelController controller) {
		this.controller = controller;
		initComponents();
		// TODO listen to changes in form fields and call controller.changed()
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jCheckBox1.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1, org.openide.util.NbBundle.getMessage(CustomCodeCompletionPanel.class, "CustomCodeCompletionPanel.jCheckBox1.text")); // NOI18N

        jTextField1.setText(org.openide.util.NbBundle.getMessage(CustomCodeCompletionPanel.class, "CustomCodeCompletionPanel.jTextField1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(CustomCodeCompletionPanel.class, "CustomCodeCompletionPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(CustomCodeCompletionPanel.class, "CustomCodeCompletionPanel.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addContainerGap(181, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jCheckBox1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(177, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		final JFileChooser fc = new JFileChooser();

		if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
			jTextField1.setText(fc.getSelectedFile().getAbsolutePath());
		}
	}//GEN-LAST:event_jButton1ActionPerformed

	void load() {
		jCheckBox1.setSelected(Preferences.userNodeForPackage(CustomCodeCompletionPanel.class).getBoolean("displayDuringTyping", true));
		jTextField1.setText(Preferences.userNodeForPackage(CustomCodeCompletionPanel.class).get("dictionaryFilename", ""));
	}

	void store() {
		Preferences.userNodeForPackage(CustomCodeCompletionPanel.class).putBoolean("displayDuringTyping", jCheckBox1.isSelected());
		Preferences.userNodeForPackage(CustomCodeCompletionPanel.class).put("dictionaryFilename", jTextField1.getText());
	}

	boolean valid() {
		return true;
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
